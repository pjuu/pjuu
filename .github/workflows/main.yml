name: main

on:
  push:
    branches: [ master ]
  pull_request:
  pull_request_target:
    types: [ opened, synchronize, reopened ]


env:
  PLATFORMS: "linux/amd64,linux/arm64"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Debug
      run: |
        python -c "import sys; print(sys.version)"
        echo ${{ github.ref }}

    - name: Set up MongoDB
      uses: wbari/start-mongoDB@v0.2
      with:
        mongoDBVersion: 3.4

    - name: Set up Redis
      uses: zhulik/redis-action@1.1.0
      with:
        redis version: 3.2

    - name: Install dependencies
      run: |
        pip install pipenv
        pipenv install --system --dev --deploy --ignore-pipfile

    - name: Lint with Flake8
      run: make flake

    - name: Test
      env:
        STORE_S3_REGION: ${{ secrets.STORE_S3_REGION }}
        STORE_S3_ENDPOINT: ${{ secrets.STORE_S3_ENDPOINT }}
        STORE_S3_BUCKET: ${{ secrets.STORE_S3_BUCKET }}
        STORE_S3_ACCESS_KEY: ${{ secrets.STORE_S3_ACCESS_KEY }}
        STORE_S3_SECRET_KEY: ${{ secrets.STORE_S3_SECRET_KEY }}
      run: make test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.xml
        fail_ci_if_error: true

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Docker build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && matrix.python-version == 3.8 }}
        platforms: ${{ env.PLATFORMS }}
        tags: pjuu/pjuu:latest
        cache-from: type=registry,ref=pjuu/pjuu:latest
        cache-to: type=inline
      if: matrix.python-version == 3.8
